# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-13 05:02
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255)),
                ('key', models.CharField(max_length=255)),
                ('expires_on', models.DateTimeField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Invitation',
                'verbose_name_plural': 'Invitations',
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField(max_length=255)),
                ('plan', models.CharField(choices=[('FREE', 'Free Plan'), ('TIER1', 'Pro Plan'), ('TIER2', 'Special Plan')], default='FREE', help_text='What plan your organization is on', max_length=16, verbose_name='Plan')),
                ('plan_start', models.DateTimeField(auto_now_add=True, help_text='When the user switched to this plan', verbose_name='Plan Start')),
                ('slug', models.SlugField(blank=True, error_messages={b'unique': 'This slug is not available'}, max_length=255, null=True, unique=True, verbose_name='Slug')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orgs_created', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orgs_owned', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organisation',
                'verbose_name_plural': 'Organisations',
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspaces_created', to=settings.AUTH_USER_MODEL)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspaces', to='workspace.Organisation')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workspaces_owned', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Workspace',
                'verbose_name_plural': 'Workspaces',
            },
        ),
        migrations.AddField(
            model_name='invitation',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='workspace.Organisation'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitation', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='invitation',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='workspace.Workspace'),
        ),
        migrations.AlterUniqueTogether(
            name='workspace',
            unique_together=set([('name', 'org')]),
        ),
        migrations.AlterUniqueTogether(
            name='organisation',
            unique_together=set([('name', 'url')]),
        ),
        migrations.AlterUniqueTogether(
            name='invitation',
            unique_together=set([('key', 'org', 'expires_on')]),
        ),
    ]
